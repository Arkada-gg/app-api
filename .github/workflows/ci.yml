name: CI/CD

on:
  push:
    branches: ['main']
  create:
    tags: true

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: apps/core/Dockerfile
          push: true
          tags: docker.io/${{ secrets.DOCKER_USERNAME }}/arkada-core:${{ github.sha }},docker.io/${{ secrets.DOCKER_USERNAME }}/arkada-core:latest

  deploy-staging:
    name: Deploy to Staging
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.STAGING_SSH_KEY }}
          known_hosts: ${{ secrets.STAGING_KNOWN_HOSTS }}

      - name: Pull and Run Docker on Staging
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.STAGING_USER }}@${{ secrets.STAGING_HOST }} \
          "echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin && \
          docker pull '${{ secrets.DOCKER_USERNAME }}/arkada-core:latest' && \
          docker stop core-dev || true && \
          docker rm core-dev || true && \
          docker system prune -af && \
          docker run --network host --restart=always -d \
            --name core-dev \
            --env-file /home/core-dev.env \
            '${{ secrets.DOCKER_USERNAME }}/arkada-core:latest'"
