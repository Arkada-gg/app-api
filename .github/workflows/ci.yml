name: CI/CD

on:
  push:
    branches: ['main']
  create:
    tags: {}

jobs:
  deploy-staging:
    name: Deploy to Staging
    if: >-
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Deploy to Staging via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: 51.15.254.143
          username: root
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            mkdir -p /app/arkada-staging
            rm -rf /app/arkada-staging/*

            if [ ! -d /app/arkada-staging/repo ]; then
              git clone https://github.com/<ВЫ>/arkada-monorepo.git /app/arkada-staging/repo
            else
              cd /app/arkada-staging/repo
              git fetch --all
              git reset --hard origin/main
            fi

            cd /app/arkada-staging/repo
            docker build -t arkada-core:dev -f apps/core/Dockerfile .

            docker rm -f core-dev || true
            docker run -d \
              --name=core-dev \
              -p 3000:3000 \
              --env DATABASE_URL='postgres://arkada_main_db_user:SefgkrbxW7q94jq!@51.159.75.175:29311/rdb' \
              --env SESSION_SECRET="myDevSecret" \
              --env CORE_PORT=3000 \
              arkada-core:dev

  deploy-production:
    name: Deploy to Production
    if: >-
      github.event_name == 'create' &&
      github.event.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Deploy to Production via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: 51.15.201.19
          username: root
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            mkdir -p /app/arkada-prod
            rm -rf /app/arkada-prod/*

            if [ ! -d /app/arkada-prod/repo ]; then
              git clone https://github.com/<ВЫ>/arkada-monorepo.git /app/arkada-prod/repo
            else
              cd /app/arkada-prod/repo
              git fetch --all
              git checkout ${{ github.event.ref }} # ref = refs/tags/<TAG>
            fi

            cd /app/arkada-prod/repo
            docker build -t arkada-core:prod -f apps/core/Dockerfile .

            docker rm -f core-prod || true
            docker run -d \
              --name=core-prod \
              -p 3000:3000 \
              --env DATABASE_URL='postgres://arkada_main_db_user:SefgkrbxW7q94jq!@51.159.75.175:29311/rdb' \
              --env SESSION_SECRET="mySuperSecret" \
              --env CORE_PORT=3000 \
              arkada-core:prod
