name: CI/CD

on:
  push:
    branches: ['main']
  create:
    tags: true

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: apps/core/Dockerfile
          push: true
          tags: docker.io/${{ secrets.DOCKER_USERNAME }}/arkada-core:${{ github.sha }},docker.io/${{ secrets.DOCKER_USERNAME }}/arkada-core:latest

deploy-staging:
  name: Deploy to Staging
  if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main')
  runs-on: ubuntu-latest
  needs: build
  steps:
    - name: Check out repo
      uses: actions/checkout@v3

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3

    - name: Configure & Test Kubeconfig
      run: |
        echo "${{ secrets.STAGING_KUBECONFIG }}" > kubeconfig

        ls -lh kubeconfig

        head -n 5 kubeconfig

        kubectl cluster-info --kubeconfig=./kubeconfig
        kubectl get nodes --kubeconfig=./kubeconfig

    - name: Deploy to Staging
      run: |
        kubectl apply -f k8s/deployment.yaml --validate=false --kubeconfig=./kubeconfig
        kubectl apply -f k8s/service.yaml --validate=false --kubeconfig=./kubeconfig
        kubectl rollout status deployment/arkada-core --timeout=120s --kubeconfig=./kubeconfig

  deploy-production:
    name: Deploy to Production
    if: github.event_name == 'create' && github.event.ref_type == 'tag'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: '1.26.0'

      - name: Configure Kubeconfig for Production
        run: |
          echo "${{ secrets.PRODUCTION_KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig

      - name: Deploy to Production
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl rollout status deployment/arkada-core --timeout=120s
